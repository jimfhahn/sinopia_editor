{
    "basePath": "/v1",
    "definitions": {
        "IndexedDocument": {
            "description": "A document with attached, known good subjects",
            "properties": {
                "subjects": {
                    "items": {
                        "properties": {
                            "label": {
                                "example": "Vulpes vulpes",
                                "type": "string"
                            },
                            "uri": {
                                "example": "http://example.org/subject1",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "text": {
                    "example": "A quick brown fox jumped over the lazy dog.",
                    "type": "string"
                }
            }
        },
        "Problem": {
            "properties": {
                "detail": {
                    "description": "A human readable explanation specific to this occurrence of the\nproblem.\n",
                    "example": "Connection to database timed out",
                    "type": "string"
                },
                "instance": {
                    "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.",
                    "format": "uri",
                    "type": "string"
                },
                "status": {
                    "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n",
                    "example": 503,
                    "exclusiveMaximum": true,
                    "format": "int32",
                    "maximum": 600,
                    "minimum": 100,
                    "type": "integer"
                },
                "title": {
                    "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n",
                    "type": "string"
                },
                "type": {
                    "default": "about:blank",
                    "description": "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n",
                    "example": "https://zalando.github.io/problem/constraint-violation",
                    "format": "uri",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Project": {
            "description": "A project definition",
            "properties": {
                "backend": {"$ref": "#/definitions/ProjectBackend"},
                "is_trained": {
                    "example": true,
                    "type": "boolean"
                },
                "language": {
                    "example": "en",
                    "type": "string"
                },
                "modification_time": {
                    "example": "2020-05-19T16:42:42.000000Z",
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "example": "My Project",
                    "type": "string"
                },
                "project_id": {
                    "example": "my-project",
                    "type": "string"
                }
            },
            "required": [
                "project_id",
                "name",
                "language",
                "backend"
            ]
        },
        "ProjectBackend": {
            "description": "A backend of a project",
            "properties": {
                "backend_id": {
                    "example": "my-backend",
                    "type": "string"
                }
            },
            "required": ["backend_id"]
        },
        "ProjectList": {
            "description": "A list of projects",
            "properties": {
                "projects": {
                    "items": {"$ref": "#/definitions/Project"},
                    "type": "array"
                }
            }
        },
        "SuggestionResult": {
            "description": "A single candidate subject for a document",
            "properties": {
                "label": {
                    "example": "Archaeology",
                    "type": "string"
                },
                "notation": {
                    "example": "42.42",
                    "type": "string"
                },
                "score": {
                    "example": 0.85,
                    "type": "number"
                },
                "uri": {
                    "example": "http://example.org/subject1",
                    "type": "string"
                }
            },
            "required": [
                "uri",
                "label",
                "score"
            ]
        },
        "SuggestionResultList": {
            "description": "A list of analysis results",
            "properties": {
                "results": {
                    "items": {"$ref": "#/definitions/SuggestionResult"},
                    "type": "array"
                }
            }
        }
    },
    "info": {
        "title": "Annif REST API",
        "version": "v1"
    },
    "parameters": {
        "project_id": {
            "description": "project identifier",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string",
            "x-example": "dummy-fi"
        }
    },
    "paths": {
        "/projects": {
            "get": {
                "operationId": "annif.rest.list_projects",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {"$ref": "#/definitions/ProjectList"}
                    }
                },
                "summary": "get a list of projects",
                "tags": ["Project administration"]
            }
        },
        "/projects/{project_id}": {
            "get": {
                "operationId": "annif.rest.show_project",
                "parameters": [
                    {"$ref": "#/parameters/project_id"}
                ],
                "produces": [
                    "application/json",
                    "application/problem+json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {"$ref": "#/definitions/Project"}
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {"$ref": "#/definitions/Problem"}
                    }
                },
                "summary": "show project information",
                "tags": ["Project administration"]
            }
        },
        "/projects/{project_id}/learn": {
            "post": {
                "consumes": ["application/json"],
                "operationId": "annif.rest.learn",
                "parameters": [
                    {"$ref": "#/parameters/project_id"},
                    {
                        "description": "documents to learn from",
                        "in": "body",
                        "name": "documents",
                        "required": true,
                        "schema": {
                            "items": {"$ref": "#/definitions/IndexedDocument"},
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json",
                    "application/problem+json"
                ],
                "responses": {
                    "204": {"description": "successful operation"},
                    "404": {
                        "description": "Project not found",
                        "schema": {"$ref": "#/definitions/Problem"}
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {"$ref": "#/definitions/Problem"}
                    }
                },
                "summary": "learn from manually indexed documents",
                "tags": ["Learning from feedback"]
            }
        },
        "/projects/{project_id}/suggest": {
            "post": {
                "consumes": ["application/x-www-form-urlencoded"],
                "operationId": "annif.rest.suggest",
                "parameters": [
                    {"$ref": "#/parameters/project_id"},
                    {
                        "description": "input text",
                        "in": "formData",
                        "name": "text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 10,
                        "description": "maximum number of results to return",
                        "in": "formData",
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "minimum score threshold, below which results will not be returned",
                        "in": "formData",
                        "name": "threshold",
                        "required": false,
                        "type": "number"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/problem+json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {"$ref": "#/definitions/SuggestionResultList"}
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {"$ref": "#/definitions/Problem"}
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {"$ref": "#/definitions/Problem"}
                    }
                },
                "summary": "suggest subjects for a given text",
                "tags": ["Automatic subject indexing"]
            }
        }
    },
    "swagger": "2.0"
}
